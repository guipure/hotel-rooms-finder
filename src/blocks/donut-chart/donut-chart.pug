mixin donut-chart(score)
  -
    const radius = '58'
    const sum = Object.values(score).reduce((acc, val) => acc + val)

    const badDash = makeDash(score.bad, sum)
    const normalDash = makeDash(score.normal, sum)
    const goodDash = makeDash(score.good, sum)
    const greatDash = makeDash(score.great, sum)

    const badOffset = (2 * Math.PI * radius * 0.25).toString()
    const normalOffset = makeOffset(badDash, badOffset)
    const goodOffset = makeOffset(normalDash, normalOffset)
    const greatOffset = makeOffset(goodDash, goodOffset)

    const circles = [
      {
        gradient: 'url(#grey-gradient)',
        dash: badDash,
        offset: badOffset,
      },
      {
        gradient: 'url(#purple-gradient)',
        dash: normalDash,
        offset: normalOffset,
      },
      {
        gradient: 'url(#green-gradient)',
        dash: goodDash,
        offset: goodOffset,
      },
      {
        gradient: 'url(#yellow-gradient)',
        dash: greatDash,
        offset: greatOffset,
      },
    ]

    const { gradients, ratings } = require('@blocks/donut-chart/data.json');

    function makeDash(val, total) {
      const circLength = 2 * Math.PI * radius
      const ratio = Math.round(circLength * val / total)
      const remain = circLength - ratio
      return ratio.toString() + ' ' + remain.toString()
    }


    function makeOffset(prevDash, prevOffset) {
      const prevDashNum = Number(prevDash.split(' ')[0])
      const prevOffsetNum = Number(prevOffset)
      const offset = prevOffsetNum - prevDashNum
      return offset.toString()
    }

  figure.donut-chart
    .donut-chart__donut
      svg.donut-chart__svg(width="100%" height="100%" viewBox="0 0 120 120")
        defs
          each gradient in gradients
            - const { id, firstColor, secondColor } = gradient
            linearGradient(id=id x1="0%" y1="0%" x2="0%" y2="100%")
              stop(offset="0%" stop-color=firstColor)
              stop(offset="100%" stop-color=secondColor)
        circle.donut-chart__hole(cx="60" cy="60" r=radius fill="#fff")

        each circle in circles
          - const { gradient, dash, offset } = circle

          circle.donut-chart__segment(
            cx="60" 
            cy="60" 
            r=radius 
            fill="transparent" 
            stroke=gradient 
            stroke-width="4" 
            stroke-dasharray=dash 
            stroke-dashoffset=offset
          )

        g.donut-chart__text
          text.donut-chart__number(x="50%" y="50%")=sum
          text.donut-chart__label(x="50%" y="50%") голосов
    figcaption.donut-chart__legend
      ul.donut-chart__key-list
        each rating in ratings
          - const { color, label } = rating
          - const spanClass = `donut-chart__key-circle donut-chart__key-circle_${color}`

          li.donut-chart__key
            span(class=spanClass)
            =label